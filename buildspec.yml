version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
  pre_build:
    commands:
      # Define your OpenAPI specification for the API Gateway
      - echo '{"openapi": "3.0.0", "info": { "title": "My API", "version": "1.0.0" }, "paths": { "/resource1": { "get": { "responses": { "200": { "description": "Successful operation" } } }, "post": { "responses": { "201": { "description": "Resource created" } } } }, "/resource2": { "get": { "responses": { "200": { "description": "Successful operation" } } }, "post": { "responses": { "201": { "description": "Resource created" } } } } }' > api_definition.json
  build:
    commands:
      # Create the REST API on API Gateway
      - aws apigateway create-rest-api --name "MyAPI" --region "eu-north-1" > rest_api.json
      # Extract the API ID from the response
      - export API_ID=$(jq -r '.id' rest_api.json)
      # Create resources
      - aws apigateway create-resource --rest-api-id $API_ID --region "eu-north-1" --path-part "resource1" > resource1.json
      - aws apigateway create-resource --rest-api-id $API_ID --region "eu-north-1" --path-part "resource2" > resource2.json
      # Extract resource IDs
      - export RESOURCE1_ID=$(jq -r '.id' resource1.json)
      - export RESOURCE2_ID=$(jq -r '.id' resource2.json)
      # Define methods
      - aws apigateway put-method --rest-api-id $API_ID --region "eu-north-1" --resource-id $RESOURCE1_ID --http-method GET --authorization-type "NONE"
      - aws apigateway put-method --rest-api-id $API_ID --region "eu-north-1" --resource-id $RESOURCE1_ID --http-method POST --authorization-type "NONE"
      - aws apigateway put-method --rest-api-id $API_ID --region "eu-north-1" --resource-id $RESOURCE2_ID --http-method GET --authorization-type "NONE"
      - aws apigateway put-method --rest-api-id $API_ID --region "eu-north-1" --resource-id $RESOURCE2_ID --http-method POST --authorization-type "NONE"
      # Integrate methods with backend services if needed
  post_build:
    commands:
      - echo "API Gateway setup complete."
